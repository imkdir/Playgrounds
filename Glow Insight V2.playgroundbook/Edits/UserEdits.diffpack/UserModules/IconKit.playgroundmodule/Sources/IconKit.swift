
//
//  GlowInsightV2.swift
//  Emma
//
//  Created by Dwight on 8/17/21.
//  Copyright Â© 2021 Glow. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public func femaleBodyPath(in targetFrame: CGRect = CGRect(x: 0, y: 0, width: 73, height: 141)) -> UIBezierPath {

    let result = UIBezierPath()
    
    let headPath = UIBezierPath()
    headPath.move(to: CGPoint(x: 36.04, y: 29.89))
    headPath.addCurve(to: CGPoint(x: 51.03, y: 14.94), controlPoint1: CGPoint(x: 44.32, y: 29.89), controlPoint2: CGPoint(x: 51.03, y: 23.2))
    headPath.addCurve(to: CGPoint(x: 36.04, y: 0), controlPoint1: CGPoint(x: 51.03, y: 6.69), controlPoint2: CGPoint(x: 44.32, y: 0))
    headPath.addCurve(to: CGPoint(x: 21.06, y: 14.94), controlPoint1: CGPoint(x: 27.77, y: 0), controlPoint2: CGPoint(x: 21.06, y: 6.69))
    headPath.addCurve(to: CGPoint(x: 36.04, y: 29.89), controlPoint1: CGPoint(x: 21.06, y: 23.2), controlPoint2: CGPoint(x: 27.77, y: 29.89))
    headPath.close()

    result.append(headPath)
    
    let bodyPath = UIBezierPath()
    bodyPath.move(to: CGPoint(x: 47.79, y: 66.69))
    bodyPath.addLine(to: CGPoint(x: 47.79, y: 62.19))
    bodyPath.addLine(to: CGPoint(x: 51.1, y: 68.44))
    bodyPath.addCurve(to: CGPoint(x: 51.87, y: 69.62), controlPoint1: CGPoint(x: 51.32, y: 68.85), controlPoint2: CGPoint(x: 51.58, y: 69.25))
    bodyPath.addLine(to: CGPoint(x: 62.77, y: 83.6))
    bodyPath.addLine(to: CGPoint(x: 62.84, y: 83.54))
    bodyPath.addCurve(to: CGPoint(x: 67.23, y: 85.62), controlPoint1: CGPoint(x: 63.88, y: 84.81), controlPoint2: CGPoint(x: 65.46, y: 85.62))
    bodyPath.addCurve(to: CGPoint(x: 72.9, y: 79.96), controlPoint1: CGPoint(x: 70.36, y: 85.62), controlPoint2: CGPoint(x: 72.9, y: 83.09))
    bodyPath.addCurve(to: CGPoint(x: 71.24, y: 75.96), controlPoint1: CGPoint(x: 72.9, y: 78.4), controlPoint2: CGPoint(x: 72.26, y: 76.99))
    bodyPath.addLine(to: CGPoint(x: 71.28, y: 75.92))
    bodyPath.addLine(to: CGPoint(x: 61.73, y: 63.83))
    bodyPath.addCurve(to: CGPoint(x: 60.31, y: 61.08), controlPoint1: CGPoint(x: 61.08, y: 63.02), controlPoint2: CGPoint(x: 60.6, y: 62.08))
    bodyPath.addLine(to: CGPoint(x: 54.94, y: 42.6))
    bodyPath.addCurve(to: CGPoint(x: 44.47, y: 33.92), controlPoint1: CGPoint(x: 53.55, y: 37.85), controlPoint2: CGPoint(x: 49.41, y: 34.41))
    bodyPath.addLine(to: CGPoint(x: 36.45, y: 33.12))
    bodyPath.addLine(to: CGPoint(x: 28.42, y: 33.92))
    bodyPath.addCurve(to: CGPoint(x: 17.96, y: 42.6), controlPoint1: CGPoint(x: 23.49, y: 34.41), controlPoint2: CGPoint(x: 19.34, y: 37.85))
    bodyPath.addLine(to: CGPoint(x: 12.59, y: 61.08))
    bodyPath.addCurve(to: CGPoint(x: 11.17, y: 63.83), controlPoint1: CGPoint(x: 12.3, y: 62.08), controlPoint2: CGPoint(x: 11.82, y: 63.02))
    bodyPath.addLine(to: CGPoint(x: 1.62, y: 75.92))
    bodyPath.addLine(to: CGPoint(x: 1.66, y: 75.96))
    bodyPath.addCurve(to: CGPoint(x: 0, y: 79.96), controlPoint1: CGPoint(x: 0.64, y: 76.99), controlPoint2: CGPoint(x: 0, y: 78.4))
    bodyPath.addCurve(to: CGPoint(x: 5.67, y: 85.62), controlPoint1: CGPoint(x: 0, y: 83.09), controlPoint2: CGPoint(x: 2.54, y: 85.62))
    bodyPath.addCurve(to: CGPoint(x: 10.06, y: 83.54), controlPoint1: CGPoint(x: 7.44, y: 85.62), controlPoint2: CGPoint(x: 9.02, y: 84.81))
    bodyPath.addLine(to: CGPoint(x: 10.12, y: 83.6))
    bodyPath.addLine(to: CGPoint(x: 21.03, y: 69.62))
    bodyPath.addCurve(to: CGPoint(x: 21.8, y: 68.44), controlPoint1: CGPoint(x: 21.32, y: 69.25), controlPoint2: CGPoint(x: 21.58, y: 68.85))
    bodyPath.addLine(to: CGPoint(x: 25.11, y: 62.19))
    bodyPath.addLine(to: CGPoint(x: 25.11, y: 66.69))
    bodyPath.addLine(to: CGPoint(x: 7.7, y: 91.07))
    bodyPath.addCurve(to: CGPoint(x: 10.34, y: 96.17), controlPoint1: CGPoint(x: 6.17, y: 93.21), controlPoint2: CGPoint(x: 7.7, y: 96.17))
    bodyPath.addLine(to: CGPoint(x: 26.73, y: 96.17))
    bodyPath.addLine(to: CGPoint(x: 29.97, y: 133.33))
    bodyPath.addLine(to: CGPoint(x: 29.97, y: 137.77))
    bodyPath.addCurve(to: CGPoint(x: 33.21, y: 141), controlPoint1: CGPoint(x: 29.97, y: 139.55), controlPoint2: CGPoint(x: 31.42, y: 141))
    bodyPath.addCurve(to: CGPoint(x: 36.45, y: 137.8), controlPoint1: CGPoint(x: 34.99, y: 141), controlPoint2: CGPoint(x: 36.43, y: 139.57))
    bodyPath.addCurve(to: CGPoint(x: 39.69, y: 141), controlPoint1: CGPoint(x: 36.46, y: 139.57), controlPoint2: CGPoint(x: 37.91, y: 141))
    bodyPath.addCurve(to: CGPoint(x: 42.93, y: 137.77), controlPoint1: CGPoint(x: 41.48, y: 141), controlPoint2: CGPoint(x: 42.93, y: 139.55))
    bodyPath.addLine(to: CGPoint(x: 42.93, y: 133.33))
    bodyPath.addLine(to: CGPoint(x: 46.17, y: 96.17))
    bodyPath.addLine(to: CGPoint(x: 62.56, y: 96.17))
    bodyPath.addCurve(to: CGPoint(x: 65.2, y: 91.07), controlPoint1: CGPoint(x: 65.2, y: 96.17), controlPoint2: CGPoint(x: 66.73, y: 93.21))
    bodyPath.addLine(to: CGPoint(x: 47.79, y: 66.69))
    bodyPath.close()
    
    result.append(bodyPath)
    return result
}

public func drawHeart(in context: CGContext) { // w14h12

    context.translateBy(x: -7, y: -6)
    //// Color Declarations
    let fillColor2 = UIColor(red: 0.992, green: 0.263, blue: 0.263, alpha: 1.000)
    let strokeColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
    
    //// Group
    //// Bezier Drawing
    let bezierPath = UIBezierPath()
    bezierPath.move(to: CGPoint(x: 9.63, y: 0.71))
    bezierPath.addCurve(to: CGPoint(x: 7, y: 1.99), controlPoint1: CGPoint(x: 8.56, y: 0.71), controlPoint2: CGPoint(x: 7.62, y: 1.22))
    bezierPath.addCurve(to: CGPoint(x: 4.38, y: 0.71), controlPoint1: CGPoint(x: 6.38, y: 1.22), controlPoint2: CGPoint(x: 5.44, y: 0.71))
    bezierPath.addCurve(to: CGPoint(x: 1, y: 4.1), controlPoint1: CGPoint(x: 2.51, y: 0.71), controlPoint2: CGPoint(x: 1, y: 2.23))
    bezierPath.addCurve(to: CGPoint(x: 7, y: 11.21), controlPoint1: CGPoint(x: 1, y: 7.11), controlPoint2: CGPoint(x: 6.12, y: 11.17))
    bezierPath.addCurve(to: CGPoint(x: 13, y: 4.19), controlPoint1: CGPoint(x: 7.77, y: 11.29), controlPoint2: CGPoint(x: 13, y: 6.93))
    bezierPath.addCurve(to: CGPoint(x: 9.63, y: 0.71), controlPoint1: CGPoint(x: 13, y: 2.32), controlPoint2: CGPoint(x: 11.49, y: 0.71))
    bezierPath.addLine(to: CGPoint(x: 9.63, y: 0.71))
    bezierPath.close()
    bezierPath.usesEvenOddFillRule = true
    fillColor2.setFill()
    bezierPath.fill()
    
    
    //// Bezier 2 Drawing
    let bezier2Path = UIBezierPath()
    bezier2Path.move(to: CGPoint(x: 9.63, y: 0.71))
    bezier2Path.addCurve(to: CGPoint(x: 7, y: 1.99), controlPoint1: CGPoint(x: 8.56, y: 0.71), controlPoint2: CGPoint(x: 7.62, y: 1.22))
    bezier2Path.addCurve(to: CGPoint(x: 4.38, y: 0.71), controlPoint1: CGPoint(x: 6.38, y: 1.22), controlPoint2: CGPoint(x: 5.44, y: 0.71))
    bezier2Path.addCurve(to: CGPoint(x: 1, y: 4.1), controlPoint1: CGPoint(x: 2.51, y: 0.71), controlPoint2: CGPoint(x: 1, y: 2.23))
    bezier2Path.addCurve(to: CGPoint(x: 7, y: 11.21), controlPoint1: CGPoint(x: 1, y: 7.11), controlPoint2: CGPoint(x: 6.12, y: 11.17))
    bezier2Path.addCurve(to: CGPoint(x: 13, y: 4.19), controlPoint1: CGPoint(x: 7.77, y: 11.29), controlPoint2: CGPoint(x: 13, y: 6.93))
    bezier2Path.addCurve(to: CGPoint(x: 9.63, y: 0.71), controlPoint1: CGPoint(x: 13, y: 2.32), controlPoint2: CGPoint(x: 11.49, y: 0.71))
    bezier2Path.addLine(to: CGPoint(x: 9.63, y: 0.71))
    bezier2Path.close()
    strokeColor.setStroke()
    bezier2Path.lineWidth = 1
    bezier2Path.miterLimit = 4
    bezier2Path.stroke()
}
